apiVersion: v1
kind: Namespace
metadata:
  name: eshoponweb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: eshoponweb
spec:
  selector:
    matchLabels:
      app: web
  replicas: 2
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: creshoponweb.azurecr.io/eshoponweb-web:1.0
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: "400M"
            requests:
              memory: "100M"
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Kubernetes
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: APPCONFIG_CONNECTIONSTRING
              value: "${{ secrets.APPCONFIG_CONNECTIONSTRING }}"
            - name: AZURE_CLIENT_ID
              value: "${{ secrets.AZURE_CLIENT_ID }}"
            - name: AZURE_CLIENT_SECRET
              value: "${{ secrets.AZURE_CLIENT_SECRET }}"
            - name: AZURE_TENANT_ID
              value: "${{ secrets.AZURE_TENANT_ID }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: publicapi-deploy
  namespace: eshoponweb
spec:
  selector:
    matchLabels:
      app: publicapi
  replicas: 2
  template:
    metadata:
      labels:
        app: publicapi
    spec:
      containers:
        - name: publicapi
          image: creshoponweb.azurecr.io/eshoponweb-publicapi:1.0
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: "200M"
            requests:
              memory: "80M"
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Kubernetes
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: APPCONFIG_CONNECTIONSTRING
              value: "${{ secrets.APPCONFIG_CONNECTIONSTRING }}"
            - name: AZURE_CLIENT_ID
              value: "${{ secrets.AZURE_CLIENT_ID }}"
            - name: AZURE_CLIENT_SECRET
              value: "${{ secrets.AZURE_CLIENT_SECRET }}"
            - name: AZURE_TENANT_ID
              value: "${{ secrets.AZURE_TENANT_ID }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderapi-deploy
  namespace: eshoponweb
spec:
  selector:
    matchLabels:
      app: orderapi
  replicas: 2
  template:
    metadata:
      labels:
        app: orderapi
    spec:
      containers:
        - name: orderapi
          image: creshoponweb.azurecr.io/eshoponweb-orderapi:1.0
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: "200M"
            requests:
              memory: "80M"
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Kubernetes
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: APPCONFIG_CONNECTIONSTRING
              value: "${{ secrets.APPCONFIG_CONNECTIONSTRING }}"
            - name: AZURE_CLIENT_ID
              value: "${{ secrets.AZURE_CLIENT_ID }}"
            - name: AZURE_CLIENT_SECRET
              value: "${{ secrets.AZURE_CLIENT_SECRET }}"
            - name: AZURE_TENANT_ID
              value: "${{ secrets.AZURE_TENANT_ID }}"
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  namespace: eshoponweb
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: publicapi-svc
  namespace: eshoponweb
spec:
  selector:
    app: publicapi
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: orderapi-svc
  namespace: eshoponweb
spec:
  selector:
    app: orderapi
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: web-ingress
  namespace: eshoponweb
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: web-svc
              servicePort: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: web-hpa
  namespace: eshoponweb
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-deploy
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 60
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: publicapi-hpa
  namespace: eshoponweb
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: publicapi-deploy
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 60
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: oderapi-hpa
  namespace: eshoponweb
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oderapi-deploy
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 60
